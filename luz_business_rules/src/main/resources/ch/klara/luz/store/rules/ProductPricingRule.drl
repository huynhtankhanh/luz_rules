package ch.klara.luz.store.rules;

import ch.klara.luz.store.model.ProductPricing;
import ch.klara.luz.store.model.CustomerPricingModel;
import ch.klara.luz.store.model.SubscriptionPricingModel;
import java.lang.Number;

dialect "mvel"
dialect "java"

rule "Price plan is SINGLE"
	when
		$productPricing : ProductPricing( pricePlan == "SINGLE" )
	then
		$productPricing.setPrice(3.0B);
end

rule "Price plan is VOLUME"
    when
        $productPricing: ProductPricing(pricePlan == "VOLUME", $volume : volume )
    then
        $productPricing.setPrice(2.0B * $volume);
end

rule "Product code is POS"
    when
        $productPricing: ProductPricing(productCode contains "POS" && pricePlan == "MONTHLY")
    then
        $productPricing.setPrice(49.0B);
end

rule "Product code is BOOKING"
    when
        $productPricing: ProductPricing(productCode contains "BOOKING" && pricePlan == "MONTHLY")
    then
        $productPricing.setPrice(79.0B);
end

rule "Price plan is MONTHLY"
    when
        $productPricing: ProductPricing(productCode not contains "POS" && productCode not contains "BOOKING" && pricePlan == "MONTHLY")
    then
        $productPricing.setPrice(39.0B);
end

rule "Price plan is QUARTERLY"
    when
        $productPricing: ProductPricing(pricePlan == "QUARTERLY")
    then
        $productPricing.setPrice(100.0B);
end

rule "Price plan is YEARLY"
    when
        $productPricing: ProductPricing(pricePlan == "YEARLY")
    then
        $productPricing.setPrice(400.0B);
end

rule "Customer legal form is EU and price plan is yearly"
    when
        $productPricing: ProductPricing(pricePlan == "YEARLY");
        $customer: CustomerPricingModel(legalForm == "EU");
    then
        $productPricing.setPrice(359.15B);
        $productPricing.setTestingDuration("P30D");
end

rule "Being customer since first day of year 2018 and price plan is QUARTERLY"
    when
        $productPricing: ProductPricing(pricePlan == "QUARTERLY")
        $customer: CustomerPricingModel(customerSinceDate >= "1-Jan-2018")
    then
        $productPricing.setPrice(95.0B)
        $productPricing.setTestingDuration("P1M")
end

rule "There is a subscription for 'Send And Print' product, deduct for 'Valiant Banking' product"
    when
        $subscription: SubscriptionPricingModel(productCode == "Send And Print")
        $productPricing: ProductPricing(productCode == "Valiant Banking")
    then
        $productPricing.setPrice(55.0B)
end

rule "Price excl. VAT for KLARA Business"
    when
        $customer: CustomerPricingModel(customerType == "Business");
        $productPricing: ProductPricing();
    then
        $productPricing.setVatIncluded(false);
end

rule "Price incl. VAT for KLARA Home"
    when
        $customer: CustomerPricingModel(customerType == "Home");
        $productPricing: ProductPricing();
    then
        $productPricing.setVatIncluded(true);
end

rule "VAT Rate for first quarter of 2019"
    when
        $productPricing: ProductPricing(requestDate >= "1-Jan-2019" && requestDate <= "31-Mar-2019");
    then
        $productPricing.setVatRate(0.05B);
end

rule "VAT Rate for second quarter of 2019 up to the future"
    when
        $productPricing: ProductPricing(requestDate >= "1-Apr-2019");
    then
        $productPricing.setVatRate(0.06B);
end

rule "Print Post A product"
    when
        $productPricing: ProductPricing(productCode == "Print Post A")
    then
        $productPricing.setPrice(1.0B)
end

rule "Print Post Service product"
    when
        $productPricing: ProductPricing(productCode == "Print Post Service")
    then
        $productPricing.setPrice(0.5B)
end

rule "Print Page product"
    when
        $productPricing: ProductPricing(productCode == "Print Page")
    then
        $productPricing.setPrice(0.1B)
end


rule "Valiant banking not yet subscribe with promo code KLARA"
salience 3
activation-group "Valiant Banking"
    when
        $productPricing: ProductPricing(productCode == "Valiant Banking", requestDate >= "1-Jan-2019" && requestDate <= "31-Mar-2020",promoCode == "KLARA")
    then
        $productPricing.setPrice(30.0B)
        $productPricing.setAppliedPromoCode("KLARA")
end

rule "Valiant banking already subscribed with latest promo code KLARA"
salience 2
activation-group "Valiant Banking"
    when
        $productPricing: ProductPricing(productCode == "Valiant Banking");
        $subscription: SubscriptionPricingModel(productCode == "Valiant Banking", promotionCode == "KLARA");
    then
        $productPricing.setPrice(30.0B)
        $productPricing.setAppliedPromoCode("KLARA")
end

rule "Valiant banking already subscribed with OLDER promo code KLARAOLDCODE"
salience 1
activation-group "Valiant Banking"
    when
        $productPricing: ProductPricing(productCode == "Valiant Banking");
        $subscription: SubscriptionPricingModel(productCode == "Valiant Banking", promotionCode == "KLARAOLDCODE");
    then
        $productPricing.setPrice(40.0B)
        $productPricing.setAppliedPromoCode("KLARAOLDCODE")
end

rule "Valiant banking not yet subscribe without promo code"
salience 0
activation-group "Valiant Banking"
    when
        $productPricing: ProductPricing(productCode == "Valiant Banking")
    then
        $productPricing.setPrice(50.0B)
end